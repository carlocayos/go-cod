// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewFriendStatsParams creates a new FriendStatsParams object
// with the default values initialized.
func NewFriendStatsParams() *FriendStatsParams {
	var ()
	return &FriendStatsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewFriendStatsParamsWithTimeout creates a new FriendStatsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewFriendStatsParamsWithTimeout(timeout time.Duration) *FriendStatsParams {
	var ()
	return &FriendStatsParams{

		timeout: timeout,
	}
}

// NewFriendStatsParamsWithContext creates a new FriendStatsParams object
// with the default values initialized, and the ability to set a context for a request
func NewFriendStatsParamsWithContext(ctx context.Context) *FriendStatsParams {
	var ()
	return &FriendStatsParams{

		Context: ctx,
	}
}

// NewFriendStatsParamsWithHTTPClient creates a new FriendStatsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewFriendStatsParamsWithHTTPClient(client *http.Client) *FriendStatsParams {
	var ()
	return &FriendStatsParams{
		HTTPClient: client,
	}
}

/*FriendStatsParams contains all the parameters to send to the API endpoint
for the friend stats operation typically these are written to a http.Request
*/
type FriendStatsParams struct {

	/*Cookie
	  ACT_SSO_COOKIE required for authenticated requests. Set with the value returned in login

	*/
	Cookie string
	/*GameType
	  Game Type

	*/
	GameType string
	/*Gamertag
	  Gamer tag

	*/
	Gamertag string
	/*LookupType
	  Lookup Type

	*/
	LookupType string
	/*Platform
	  Game platform

	*/
	Platform string
	/*Title
	  Game title

	*/
	Title string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the friend stats params
func (o *FriendStatsParams) WithTimeout(timeout time.Duration) *FriendStatsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the friend stats params
func (o *FriendStatsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the friend stats params
func (o *FriendStatsParams) WithContext(ctx context.Context) *FriendStatsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the friend stats params
func (o *FriendStatsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the friend stats params
func (o *FriendStatsParams) WithHTTPClient(client *http.Client) *FriendStatsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the friend stats params
func (o *FriendStatsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCookie adds the cookie to the friend stats params
func (o *FriendStatsParams) WithCookie(cookie string) *FriendStatsParams {
	o.SetCookie(cookie)
	return o
}

// SetCookie adds the cookie to the friend stats params
func (o *FriendStatsParams) SetCookie(cookie string) {
	o.Cookie = cookie
}

// WithGameType adds the gameType to the friend stats params
func (o *FriendStatsParams) WithGameType(gameType string) *FriendStatsParams {
	o.SetGameType(gameType)
	return o
}

// SetGameType adds the gameType to the friend stats params
func (o *FriendStatsParams) SetGameType(gameType string) {
	o.GameType = gameType
}

// WithGamertag adds the gamertag to the friend stats params
func (o *FriendStatsParams) WithGamertag(gamertag string) *FriendStatsParams {
	o.SetGamertag(gamertag)
	return o
}

// SetGamertag adds the gamertag to the friend stats params
func (o *FriendStatsParams) SetGamertag(gamertag string) {
	o.Gamertag = gamertag
}

// WithLookupType adds the lookupType to the friend stats params
func (o *FriendStatsParams) WithLookupType(lookupType string) *FriendStatsParams {
	o.SetLookupType(lookupType)
	return o
}

// SetLookupType adds the lookupType to the friend stats params
func (o *FriendStatsParams) SetLookupType(lookupType string) {
	o.LookupType = lookupType
}

// WithPlatform adds the platform to the friend stats params
func (o *FriendStatsParams) WithPlatform(platform string) *FriendStatsParams {
	o.SetPlatform(platform)
	return o
}

// SetPlatform adds the platform to the friend stats params
func (o *FriendStatsParams) SetPlatform(platform string) {
	o.Platform = platform
}

// WithTitle adds the title to the friend stats params
func (o *FriendStatsParams) WithTitle(title string) *FriendStatsParams {
	o.SetTitle(title)
	return o
}

// SetTitle adds the title to the friend stats params
func (o *FriendStatsParams) SetTitle(title string) {
	o.Title = title
}

// WriteToRequest writes these params to a swagger request
func (o *FriendStatsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Cookie
	if err := r.SetHeaderParam("Cookie", o.Cookie); err != nil {
		return err
	}

	// path param gameType
	if err := r.SetPathParam("gameType", o.GameType); err != nil {
		return err
	}

	// path param gamertag
	if err := r.SetPathParam("gamertag", o.Gamertag); err != nil {
		return err
	}

	// path param lookupType
	if err := r.SetPathParam("lookupType", o.LookupType); err != nil {
		return err
	}

	// path param platform
	if err := r.SetPathParam("platform", o.Platform); err != nil {
		return err
	}

	// path param title
	if err := r.SetPathParam("title", o.Title); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
